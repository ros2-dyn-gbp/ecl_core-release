%{?!ros_distro:%global ros_distro rolling}
%global pkg_name ecl_converters
%global normalized_pkg_name %{lua:return (string.gsub(rpm.expand('%{pkg_name}'), '_', '-'))}

Name:           ros-rolling-ecl-converters
Version:        1.2.1
Release:        4%{?dist}
Summary:        ROS %{pkg_name} package

License:        BSD
URL:            http://wiki.ros.org/ecl_converters
Source0:        %{name}-%{version}.tar.gz

BuildRequires:  bloom-rpm-macros
BuildRequires:  cmake

%{?bloom_package}

%description
Some fast/convenient type converters, mostly for char strings or strings. These
are not really fully fleshed out, alot of them could use the addition for the
whole range of fundamental types (e.g. all integers, not just int, unsigned
int). They will come as the need arises.


%package devel
Release:        %{release}%{?release_suffix}
Summary:        %{summary}
Provides:       %{name} = %{version}-%{release}
Provides:       %{name}%{?_isa} = %{version}-%{release}
Requires:       %{name}-runtime%{?_isa} = %{version}-%{release}

%description devel
Some fast/convenient type converters, mostly for char strings or strings. These
are not really fully fleshed out, alot of them could use the addition for the
whole range of fundamental types (e.g. all integers, not just int, unsigned
int). They will come as the need arises.


%package runtime
Release:        %{release}
Summary:        %{summary}

%description runtime
Some fast/convenient type converters, mostly for char strings or strings. These
are not really fully fleshed out, alot of them could use the addition for the
whole range of fundamental types (e.g. all integers, not just int, unsigned
int). They will come as the need arises.


%prep
%autosetup -p1


%generate_buildrequires
%bloom_buildrequires


%build
%cmake \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="%{bloom_prefix}" \
    -DAMENT_PREFIX_PATH="%{bloom_prefix}" \
    -DCMAKE_PREFIX_PATH="%{bloom_prefix}" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif

%cmake3_build


%install
%cmake_install


%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C %{__cmake_builddir} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
CTEST_OUTPUT_ON_FAILURE=1 \
    %cmake_build $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif


%files devel
%dir %{bloom_prefix}
%ghost %{bloom_prefix}/share/%{pkg_name}/package.xml


%files runtime
%{bloom_prefix}


%changelog
* Fri Mar 22 2024 Daniel Stonier <d.stonier@gmail.com> - 1.2.1-4
- Autogenerated by Bloom
